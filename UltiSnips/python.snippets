snippet future
from __future__ import print_function, division
endsnippet

snippet doc
__author__ = "Jody Stephens"
__copyright__ = "Copyright ${1:`date +%Y`}, ArcherDX"
__credits__ = ["Jody Stephens"]
__maintainer__ = "Jody Stephens"
__email__ = "jstephens@archerdx.com"
endsnippet

snippet class
class ${1:Name}(${2:object}):
    def __init__(self, $3):
        super($1, self).__init__($3)
endsnippet

snippet cdef
@classmethod
def $1(cls, $2):
    """
    
    :param $3 $4: $5
    """
    $0
endsnippet

snippet def
def $1(self, $2):
    
endsnippet

snippet set
self.$1 = $1
endsnippet

snippet kw
$1=$1,
endsnippet

snippet ds
"""$1
$0
"""
endsnippet

snippet pa
:param ${1:type} ${2:name}: $0
endsnippet

snippet pr
@property
def $1(self):
    return self._$1

@$1.setter
def $1(self, value):
    self._$1 = value
endsnippet

snippet abcpr
@abc.abstractproperty
def $1(self):
    raise NotImplementedError()
endsnippet

snippet abcme
@abc.abstractmethod
def $1(self, *args, **kwargs):
    raise NotImplementedError()
endsnippet

snippet defi

.. _$1:

$1
  $0

endsnippet
snippet defref
:ref:\`$1 <$1>\`
endsnippet
